#+author: Yisu Nie
#+email: ynie@dow.com
#+startup: showall hideblocks
#+title: Notes on Numerical Optimization Methods 
#+latex_class: article
#+latex_class_options: [letterpaper, 11pt]
#+options: H:4 toc:nil ^:nil    
#+latex_header: \usepackage{palatino}
#+latex_header: \usepackage{sidenotes}
#+latex_header: \usepackage{algorithm}  
#+latex_header: \usepackage{algorithmic}  
#+latex_header: \usepackage[top=1in, bottom=1in, right = 0.5in, outer=3in, inner=0.5in, heightrounded, marginparwidth=2.5in, marginparsep=0.25in]{geometry}
#+latex_header: \linespread{1.3}
#+latex_header: \providecommand{\diff}[2]{\ensuremath{\frac{{\rm d} #1}{{\rm d} #2}}}
#+latex_header: \providecommand{\note}[1]{\sidenote{{\footnotesize #1}}}

* Initial Value Problems
The general form of a first order initial value problem (IVP) can be stated as follows\note{Different notation for differentiation}:

\begin{margintable}
\footnotesize
\begin{tabular}{ll}
 Gottfried Leibniz & $\frac{\rm dz^{{n}}}{\rm dt^{{n}}}$  \\
 Joseph Louis Lagrange & $z^{\prime}(t), z^{\prime\prime}(t),..z^{(n)}(t)$ \\
 Isaac Newton & $\dot z$, $\ddot z$, ..
\end{tabular}
\end{margintable}

\begin{subequations}
\label{eq:ivp-gen-form-def}
\begin{align}
\label{eq:ivp-gen-form-def-a}
& \diff{z}{t}= f(t,z), \qquad t \in [0,t_{f}]; \\
\label{eq:ivp-gen-form-def-b}
& z(0) = z_{0}. 
\end{align}
\end{subequations}

The dependent variable $z$ is a vector of $m$ components. The independent variable $t$ is a scalar within the specified range from 0 to $t_{f}$.If $t$ does not appear explicitly in
the governing equation $f(\cdot)$, the system is called \emph{autonomous}. Otherwise, the system is \emph{nonautomonous}. The initial state of the system is given by a known
parameter vector $z_0$. 

** Numerical Solution Methods
Numberical solution approaches deal with finite dimensional representations of Eq.eqref:eq:ivp-gen-form-def after discritizing the equations in the continuous interval. For that, a
mesh is introduced with a sequence of $N+1$ distant points:
\begin{equation}
\label{eq:ivp-mesh-def}
0=t_{0}<t_{1}<\cdots<t_{n-1}<t_{n}<\cdots<t_{N}=t_{f}
\end{equation} 
and the length of the $n^{th}$ step is denoted by:
\begin{equation}
\label{eq:ivp-step-size-def}
h_{n} = t_{n} - t_{n-1}, \qquad n=1,2,\ldots,N.
\end{equation} 
It's generally helpful to use Taylor's expansion to derive numerical solution procedures to Eq.eqref:eq:ivp-gen-form-def-a. Consider a Taylor series at $t=t_{n-1}$: 
\begin{equation}
\label{eq:ivp-taylor-series-def}
z(t_{n}) = z(t_{n-1} + h_{n}) = z(t_{n-1}) + h_{n}z'(t_{n-1}) + \frac{h^{2}_{n}}{2}z''(t_{n-1}) + \ldots + \frac{h^{p}_{n}}{k!}z^{(p)}(t_{n-1}) + \ldots,
\end{equation}
which is often trucated up to the second order:
\begin{margintable}
\footnotesize
$x=\mathcal{O}(h^{p})$ means $\exists C>0$ such that \left | x \right | \leqslant Ch^{p}.
\end{margintable}
\begin{equation}
\label{eq:ivp-taylor-series-truc}
z(t_{n}) = z(t_{n-1}) + h_{n}z'(t_{n-1}) + \frac{h^{2}_{n}}{2}z''(t_{n-1}) + \mathcal{O}(h^{2}_{n})
\end{equation}
*** First Order Approaches
Three well known basic approaches for IVPs are the forward Euler, backward Euler, and Trapezoidal methods.
**** Forward Euler
If the expansion in Eq.eqref:eq:ivp-taylor-series-def is only up to the first order, we have 
\begin{margintable}
\footnotesize
We note $z(t_{n})$ as $z_{n}$ for short
\end{margintable}
\begin{equation}
\label{eq:ivp-forward-euler}
z_{n} \approx z_{n-1} + h_{n}z'_{n-1}, \qquad, n=1,2,\ldots,N.
\end{equation}
Evaluate the derivative $z'_{n-1} = f(t_{n-1},z_{n-1})$ and use the first order approaxiation, and the forward Euler formula\note{This is an explicit formula} is
\begin{equation}
\label{eq:ivp-forward-euler-step}
z_{n} = z_{n-1} + h_{n}f(t_{n-1},z_{n-1}), \qquad, n=1,2,\ldots,N.
\end{equation} 
**** Backward Euler
The backward Euler formula is also derived from Taylor series of centered at $t=t_{n}$:
\begin{equation}
\label{ivp-backward-euler}
z(t_{n}) = z(t_{n+1} - h_{n+1}) = z(t_{n+1}) - h_{n+1}z'(t_{n}) + \frac{h^{2}_{n+1}}{2}z''(t_{n}) + \mathcal{O}(h^{2}_{n+1})
\end{equation}
Similar to the previous procedure, we obtain the backward Euler formula\note{This is an implicit formula}:
\begin{equation}
\label{eq:ivp-backward-euler-step}
z_{n+1} = z_{n} + h_{n+1}f(t_{n},z_{n})
\end{equation}
**** Trapezoidal Method
The Trapezoidal rule is developed by Taylor expansion centered at $t_{n-\frac{1}{2}}=t_{n-1} + \frac{h_{n}}{2}$:
\begin{subequations}
\label{eq:ivp-trapezoidal-method-taylor}
\begin{align}
\label{eq:ivp-trapezoidal-method-taylor-a}
&z(t_{n}) = z(t_{n-\frac{1}{2}} + \frac{h_{n}}{2}) = z(t_{n-\frac{1}{2}}) + \frac{h_{n}}{2}z'(t_{n-\frac{1}{2}}) + \frac{h_{n}^{2}}{2\cdot2^{2}}z''(t_{n-\frac{1}{2}}) + \mathcal{O}(h^{2}_{n}) \\
\label{eq:ivp-trapezoidal-method-taylor-b}
&z(t_{n-1}) = z(t_{n-\frac{1}{2}} - \frac{h_{n}}{2}) = z(t_{n-\frac{1}{2}}) - \frac{h_{n}}{2}z'(t_{n-\frac{1}{2}}) + \frac{h_{n}^{2}}{2\cdot2^{2}}z''(t_{n-\frac{1}{2}}) + \mathcal{O}(h^{2}_{n})
\end{align}
\end{subequations}
Substract Eq.eqref:eq:ivp-trapezoidal-method-taylor-b with Eq.eqref:eq:ivp-trapezoidal-method-taylor-a and devide by the step size $h_{n}$:
\begin{equation}
\label{eq:ivp-trapezoidal-step-a}
\frac{z_{n} - z_{n-1}}{h_{n}} = z'_{n-\frac{1}{2}} + \mathcal{O}(h^{2}_{n})
\end{equation}  
Evaluating the derivatie at the middle point and rearranging the above equation leads to
\begin{margintable}
\footnotesize
Derivative at the middle point\\
$z'_{n-\frac{1}{2}} = \frac{1}{2}\left (f(t_{n-1},z_{n-1}) + f(t_{n},z_{n})\right)$
\end{margintable}

\begin{equation}
\label{eq:ivp-trapezoidal-step-b}
z_{n} = z_{n-1} + \frac{h_{n}}{2}\left (f(t_{n-1},z_{n-1}) +  f(t_{n},z_{n})\right)
\end{equation} 
#+begin_src asymptote

#+end_src

#+latex: \end{document}
bibliography:../../../Emacs/MyBibTex/library.bib
